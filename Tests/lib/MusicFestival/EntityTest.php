<?php

namespace MusicFestival;
require_once dirname(__FILE__) . '/../../../lib/MusicFestival/Entity.php';

/**
 * Test class for Entity.
 * Generated by PHPUnit on 2012-06-10 at 20:49:39.
 */
class EntityTest extends \PHPUnit_Framework_TestCase {

  /**
   * @var MusicFestival\Entity
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp() {
    $this->object = $this->getMockForAbstractClass('MusicFestival\Entity', array(array('title', 'content')));
  }

  /**
   * @covers Entity::hasAttribute
   */
  public function testHasAttribute() {
    $this->assertTrue($this->object->hasAttribute('title'));
    $this->assertFalse($this->object->hasAttribute('unknown'));
  }

  /**
   * @covers Entity::getAttribute
   * @covers Entity::setAttribute
   */
  public function testGetAttribute() {
    $this->assertNull($this->object->getAttribute('title'));
    $this->object->setAttribute('title', 'song song');
    $this->assertEquals('song song', $this->object->getAttribute('title'));

    $this->object->setAttribute('title', null);
    $this->assertNull($this->object->getAttribute('title'));

    $classname = get_class($this->object);
    $this->setExpectedException('UnexpectedValueException', "Unknown attribute 'unknown' on '$classname' object.");
    $this->object->getAttribute('unknown');
  }

  /**
   * @covers Entity::setAttribute
   */
  public function testSetAttribute() {
    $classname = get_class($this->object);
    $this->setExpectedException('UnexpectedValueException', "Unknown attribute 'unknown' on '$classname' object.");
    $this->object->setAttribute('unknown', 'song song');
  }

  /**
   * @covers Entity::setAttributes
   */
  public function testSetAttributes() {
    $this->object->setAttributes(array('title' => 'Song for a dev', 'content' => 'niek'));

    $this->assertEquals('Song for a dev', $this->object->getAttribute('title'));
    $this->assertEquals('niek', $this->object->getAttribute('content'));
  }

  /**
   * @covers Entity::setAttributes
   */
  public function testSetAttributesWithBullcrap() {
    $this->object->setAttributes(array('unknown' => 'xyz'));

    $this->assertNull($this->object->getAttribute('title'));
    $this->assertNull($this->object->getAttribute('content'));

    $classname = get_class($this->object);
    $this->setExpectedException('UnexpectedValueException', "Unknown attribute 'unknown' on '$classname' object.");
    $this->object->getAttribute('unknown');
  }
}