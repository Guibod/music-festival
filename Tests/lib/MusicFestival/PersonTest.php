<?php

namespace MusicFestival;

require_once dirname(__FILE__) . '/../../../lib/MusicFestival/Person.php';

/**
 * Test class for Person.
 * Generated by PHPUnit on 2012-06-10 at 21:58:03.
 */
class PersonTest extends \PHPUnit_Framework_TestCase {

  /**
   * @var Person
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp() {
    $this->object = new Person;
  }

  /**
   * @covers MusicFestival\Person::getName
   */
  public function testGetName() {
    $this->assertNull($this->object->getName());
    $this->object->setAttribute(Person::ATTR_NAME, 'niek');
    $this->assertEquals('niek', $this->object->getName());
  }

  /**
   * @covers MusicFestival\Person::getId
   */
  public function testGetId() {
    $this->assertNull($this->object->getId());
    $this->object->setAttribute(Person::ATTR_ID, '19');
    $this->assertEquals('19', $this->object->getId());
  }

  /**
   * @covers MusicFestival\Person::getTracks
   */
  public function testGetTracks() {
    $this->assertInternalType('array', $this->object->getTracks());
    $this->assertCount(0, $this->object->getTracks());

    $this->object->setTracks(array('niiek','nieek'));

    $this->assertEquals(array('niiek','nieek'), $this->object->getTracks());
  }

  /**
   * @covers MusicFestival\Person::getSocialAccounts
   */
  public function testGetSocialAccounts() {
    $this->assertInternalType('array', $this->object->getSocialAccounts());
    $this->assertCount(0, $this->object->getSocialAccounts());

    $this->object->setSocialAccounts(array('niiek','nieek'));

    $this->assertEquals(array('niiek','nieek'), $this->object->getSocialAccounts());
  }

  /**
   * @covers MusicFestival\Person::fromArray
   */
  public function testFromArray() {
    $person = Person::fromArray(array(
      'name' => 'Robert Onion',
    ));

    $this->assertEquals('Robert Onion', $person->getName());
    $this->assertEquals('Robert Onion', $person->getAttribute(Person::ATTR_NAME));
  }
}
